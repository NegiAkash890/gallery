{"version":3,"sources":["redux/constants/action-type.js","components/EditCollection.js","redux/actions/action.js","components/Card.js","Home.js","components/CreateCollection.js","App.js","redux/reducers/collectionReducer.js","redux/reducers/rootReducer.js","redux/store.js","index.js"],"names":["actionTypes","CREATE_COLLECTION","UPDATE_COLLECTION","DELETE_COLLECTION","EditCollection","id","useParams","history","useHistory","useState","error","setError","msg","setErrorMsg","dispatch","useDispatch","name","setName","description","setDescription","images","setImages","link","setLink","alt","setAlt","collections","useSelector","state","useEffect","item","filter","handleChange","e","field","target","value","maxW","mt","status","mb","hidden","display","justifyContent","alignItems","mr","type","size","onClick","preventDefault","length","setTimeout","payload","push","disabled","to","deleteCollection","fontSize","color","spacing","placeholder","isRequired","onChange","defaultValue","w","d","verticalAlign","newImgId","uuidv4","newArray","colorScheme","variant","className","map","backgroundColor","position","left","top","newImageCollection","img","removeImage","boxSize","objectFit","src","fallbackSrc","Card","borderBottom","pb","borderColor","as","isTruncated","p","Edit","ml","path","component","Home","collection","CreateCollection","handleClick","width","required","imgId","App","bg","exact","intialState","rootReducer","combineReducers","findIndex","updatedState","splice","updateCollection","store","createStore","window","__REDUX_DEVTOOLS_EXTENSION__","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.b7e8e446.chunk.js","sourcesContent":["export const actionTypes = {\r\n    CREATE_COLLECTION : 'CREATE_COLLECTION',\r\n    UPDATE_COLLECTION :'UPDATE_COLLECTION' ,\r\n    DELETE_COLLECTION:'DELETE_COLLECTION'\r\n}","import { useEffect, useState } from \"react\";\r\nimport { v4 as uuidv4} from 'uuid'\r\nimport { useDispatch, useSelector } from \"react-redux\"\r\nimport { useHistory, useParams } from \"react-router\"\r\nimport { deleteCollection, updateCollection } from \"../redux/actions/action\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { FormControl, FormLabel } from \"@chakra-ui/form-control\";\r\nimport { Input } from \"@chakra-ui/input\";\r\nimport { Textarea } from \"@chakra-ui/textarea\";\r\nimport { Button } from '@chakra-ui/button';\r\nimport {Alert,AlertIcon } from \"@chakra-ui/react\"\r\nimport { Box, Container, Image, Text, Stack } from \"@chakra-ui/react\"\r\n\r\n\r\n\r\n\r\nfunction EditCollection() {\r\n\r\n    const {id} = useParams();\r\n    const history = useHistory()\r\n    const [error, setError] = useState(false) ;\r\n    const [msg,setErrorMsg] = useState('') ;\r\n    const dispatch = useDispatch();\r\n    const [name,setName] = useState('');\r\n    const [description, setDescription] = useState('');\r\n    const [images, setImages] = useState([]);\r\n    const [link, setLink ] = useState('') ;\r\n    const [alt, setAlt ] = useState('') ;\r\n    const collections  = useSelector( state => state.collections.collections)\r\n\r\n    useEffect(()=>{\r\n       \r\n         let item = collections.filter(item => item.id === id);\r\n         setName(item[0]?.name)\r\n         setDescription(item[0]?.description)\r\n         setImages(item[0]?.images)\r\n\r\n    },[])\r\n\r\n  \r\n    const addImage = (e)=>{\r\n        e.preventDefault();\r\n        if((link.length <  8) || (alt.length === 0)){\r\n            setErrorMsg(\"Please Fill Link Image Fields Properly\")\r\n            setError(true)\r\n            setTimeout(()=> {setError(false)},3000)\r\n            return ;\r\n        }\r\n        let newImgId = uuidv4();\r\n        const newArray = [ ...images, { id:newImgId,link:link, alt:alt}] ;\r\n        setImages(newArray);\r\n        \r\n    }\r\n\r\n    const removeImage = (e,id)=>{\r\n        e.preventDefault();\r\n        let newImageCollection = images.filter( img => img.id !== id);\r\n        setImages(newImageCollection);\r\n    }\r\n    \r\n    const removeCollection = (e) =>{\r\n        e.preventDefault();\r\n        dispatch(deleteCollection(id));\r\n        history.push('/')\r\n    }\r\n    const handleClick = (e) =>{\r\n\r\n        e.preventDefault();\r\n        if(name.length < 5){\r\n            setErrorMsg(\"Name should be atleast 5 character long\")\r\n            setError(true);\r\n            setTimeout(()=> {setError(false)},3000)\r\n            return ;\r\n           \r\n        }\r\n\r\n        else if(description.length < 5){\r\n            setErrorMsg(\"Longer description atleast 10 characters long\")\r\n            setError(true)\r\n            setTimeout(()=> {setError(false)},3000)\r\n            return ;\r\n        }\r\n        \r\n        else if(images.length === 0){\r\n            setErrorMsg(\"Please provide image data\")\r\n            setError(true)\r\n            setTimeout(()=> {setError(false)},3000)\r\n            return ;\r\n        }\r\n        const newCollection = {id, name, description, images};\r\n        dispatch(updateCollection(newCollection));\r\n        history.push('/')\r\n      \r\n    }\r\n    const handleChange = (e, field) =>{\r\n        switch(field){\r\n            case \"name\" : setName(e.target.value)\r\n            break;\r\n            case \"description\" : setDescription(e.target.value)\r\n            break;\r\n            case \"link\" : setLink(e.target.value);\r\n            break;\r\n            case \"alt\" : setAlt(e.target.value);\r\n            break;\r\n            default :\r\n            break;\r\n        }\r\n    }\r\n\r\n   return(\r\n        <Container maxW=\"xl\" mt=\"10\">\r\n            <Alert status=\"error\" mb={2} hidden={!error}>\r\n                    <AlertIcon />\r\n                    {msg}\r\n            </Alert>\r\n           <Box display=\"flex\" justifyContent=\"space-between\">\r\n                <h2>Editing Collection</h2>\r\n                <Box mb=\"2\" display=\"flex\" alignItems=\"center\">\r\n                    <Button mr=\"2\" type='submit' size=\"xs\" onClick={handleClick} disabled={error}>Update</Button>\r\n                    <Link to='/' onClick={removeCollection}><Text fontSize=\"xs\" color=\"red.400\">Delete</Text></Link>\r\n                </Box>\r\n            </Box>\r\n           <hr/>\r\n           <br/>\r\n           <form>\r\n           <Stack spacing={4}>\r\n           <FormControl>\r\n                <FormLabel>Collection Id</FormLabel>\r\n                    <Input type=\"text\" value={id}  placeholder='Collection Id' disabled/>\r\n                </FormControl>\r\n                <FormControl  isRequired>\r\n                    <FormLabel>Collection Name</FormLabel>\r\n                    <Input type=\"text\" onChange={(e)=>handleChange(e,\"name\")} value={name} placeholder='Enter Collection Name'/>\r\n                </FormControl>\r\n                <FormControl isRequired>\r\n                    <FormLabel>Collection Description</FormLabel>\r\n                    <Textarea onChange={(e)=>handleChange(e,\"description\")} defaultValue={description} id='collection_description'  placeholder='Enter Description' isRequired/>\r\n                </FormControl>\r\n                <FormControl>\r\n                    <FormLabel>Add Images </FormLabel>\r\n                    <Input type='url' onChange={(e)=>handleChange(e,\"link\")} placeholder=\"Image Link\" value={link}/>\r\n                    <Input  mt={2} type='name' onChange={(e)=>handleChange(e,\"alt\")}  placeholder=\"Alternate Text\" value={alt}/>\r\n                    <Button mt={2} w='sm' d= 'block' verticalAlign\t='right' onClick={addImage} colorScheme=\"teal\" variant=\"outline\">Add Image</Button>\r\n                    <div className='image_preview'>\r\n                   { \r\n                       (images.length  !== 0) ?  images.map((item)=>{\r\n                           return(\r\n                           <div className='list_item'  key={item.id}>\r\n                               <Button backgroundColor=\"red.400\" size=\"xs\" position=\"absolute\" left=\"90\" top=\"1\" onClick={(e)=>removeImage(e, item.id)}>x</Button>\r\n                               <Image boxSize=\"100px\" objectFit=\"cover\" src={item.link} key={item.id} fallbackSrc=\"https://via.placeholder.com/150\" />\r\n                           </div>)\r\n                        } ) : \"No Images to show\"\r\n                   }\r\n                   </div>\r\n                </FormControl>\r\n                </Stack>\r\n            </form>\r\n        </Container>\r\n   )\r\n  \r\n}\r\n\r\nexport default EditCollection\r\n","import { actionTypes } from \"../constants/action-type\"\r\n\r\n\r\n{/*  Creating New collection action  */}\r\nexport const createCollection = (collection)=>{\r\n    return {\r\n        type : actionTypes.CREATE_COLLECTION ,\r\n        payload : collection\r\n    }\r\n}\r\n\r\nexport const deleteCollection = (id) =>{\r\n    return {\r\n        type: actionTypes.DELETE_COLLECTION ,\r\n        payload : id\r\n    }\r\n}\r\n\r\n{/*  Fetch all collections action  */}\r\nexport const getCollections = () =>{\r\n    return {\r\n        type: actionTypes.GET_COLLECTIONS ,\r\n    }\r\n} \r\n\r\n\r\n{/*  Update a collection action  */}\r\nexport const updateCollection = (updatedcollection) =>{\r\n    return {\r\n        type : actionTypes.UPDATE_COLLECTION ,\r\n        payload : updatedcollection\r\n    }\r\n}","import React  from 'react'\r\nimport { Route, Link} from 'react-router-dom'\r\nimport './Card.css'\r\nimport EditCollection from './EditCollection'\r\nimport { EditIcon } from '@chakra-ui/icons'\r\nimport { Box, Heading } from '@chakra-ui/layout'\r\nimport { Text, Image } from \"@chakra-ui/react\"\r\n\r\n\r\nfunction Card({name, description, id ,images}) {\r\n    return (\r\n        <Box className='collection_card'>\r\n            <Box borderBottom=\"1px\"  pb=\"2\" borderColor=\"gray.200\" display=\"flex\" justifyContent=\"space-between\" alignItems=\"center\">\r\n                <Heading as=\"h3\" size=\"md\">{name ? name : \"Heading\"}</Heading>\r\n                <p className='image_count'>{images.length } {images.length > 1 ? \"items\":\"item\"}</p>\r\n            </Box>\r\n            <Box mt=\"5\">\r\n                <Heading as=\"h4\" size=\"sm\">Description</Heading>\r\n                <Text fontSize=\"xs\" mt={2} color=\"gray.600\" isTruncated>{description ? description : \"Description goes here\"}</Text>\r\n                <Box className='collection_card_image'>\r\n                { (images.length === 0 ) ? \"No Images to Show\" :(\r\n                       images.map((item)=>{\r\n                           return(\r\n                            <Image p=\"1\" boxSize=\"100px\" objectFit=\"cover\" src={item.link} alt={item.alt} key={item.id}/>\r\n                            )\r\n                        }))\r\n                   }\r\n                </Box>\r\n                \r\n                <Link to={`/edit/${id}`}><Box display=\"flex\" alignItems=\"center\"><EditIcon ml={2}/></Box></Link>\r\n                <Route path={`/edit/:id`} component={EditCollection}></Route>\r\n            </Box>\r\n        </Box>\r\n    )\r\n}\r\n\r\nexport default Card\r\n","import React from 'react'\r\nimport { useSelector } from 'react-redux'\r\nimport './App.css'\r\nimport Card from './components/Card'\r\n\r\n\r\nfunction Home() {\r\n    const collections  = useSelector( state => state.collections.collections)\r\n    return (\r\n        <div className='home'>\r\n            { collections.map(\r\n                collection =>{\r\n                return <Card name={collection.name} description={collection.description} key={collection.id} id= {collection.id} images={collection.images}/>\r\n                })\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Home\r\n","import React, { useState } from 'react'\r\nimport { useDispatch } from 'react-redux';\r\nimport { createCollection } from '../redux/actions/action';\r\nimport { useHistory } from 'react-router';\r\nimport { v4 as uuidv4} from 'uuid'\r\n\r\nimport { Input } from '@chakra-ui/input';\r\nimport { Textarea } from '@chakra-ui/textarea';\r\nimport { Button } from '@chakra-ui/button';\r\nimport { FormControl, FormLabel } from '@chakra-ui/form-control';\r\nimport { Box, Container, Image, Stack } from \"@chakra-ui/react\"\r\nimport {Alert,AlertIcon } from \"@chakra-ui/react\"\r\nimport './CreateCollection.css'\r\n\r\n{/* Genertaing unique Id for collection */}\r\nlet id = uuidv4();\r\n\r\nfunction CreateCollection() {\r\n    const history = useHistory() ;\r\n    const dispatch = useDispatch() ;\r\n    const [error, setError] = useState(false) ;\r\n    const [msg,setErrorMsg] = useState('') ;\r\n    const [name,setName] = useState('') ;\r\n    const [description, setDescription] = useState('') ;\r\n    const [images, setImages] = useState([]) ;\r\n    const [link, setLink ] = useState('') ;\r\n    const [alt, setAlt ] = useState('') ;\r\n    \r\n    {/* Adding Image to the Collection */}\r\n\r\n    const addImage = (e)=>{\r\n        e.preventDefault();\r\n        let imgId= uuidv4();\r\n        if((link.length <  8) || (alt.length === 0)){\r\n            setErrorMsg(\"Please Fill Link Image Fields Properly\")\r\n            setError(true)\r\n            setTimeout(()=> {setError(false)},3000)\r\n            return ;\r\n        }\r\n        const newArray = [ ...images, {id:imgId, link:link, alt:alt}] ;\r\n        setImages(newArray);\r\n        \r\n    } \r\n    \r\n     {/* Remove Image to the Collection */}\r\n\r\n    const removeImage = (e, id) =>{\r\n           e.preventDefault()\r\n           let newImageCollection = images.filter( img => img.id !== id);\r\n           setImages(newImageCollection);\r\n    }\r\n\r\n     {/* Logic for validation and adding Collection to redux */}\r\n\r\n    const handleClick = (e) =>{\r\n        e.preventDefault();\r\n        if(name.length < 5){\r\n            setErrorMsg(\"Name should be atleast 5 character long\")\r\n            setError(true);\r\n            setTimeout(()=> {setError(false)},3000)\r\n            return ;\r\n           \r\n        }\r\n\r\n        else if(description.length < 5){\r\n            setErrorMsg(\"Longer description atleast 10 characters long\")\r\n            setError(true)\r\n            setTimeout(()=> {setError(false)},3000)\r\n            return ;\r\n        }\r\n        \r\n        else if(images.length === 0){\r\n            setErrorMsg(\"Please provide image data\")\r\n            setError(true)\r\n            setTimeout(()=> {setError(false)},3000)\r\n            return ;\r\n        }\r\n\r\n        const newCollection = {id, name, description, images};\r\n        dispatch(createCollection(newCollection));\r\n        id= uuidv4();\r\n        history.push('/');\r\n    }\r\n    \r\n     {/* Tracking Changes in the fields */}\r\n\r\n    const handleChange = (e, field) =>{\r\n   \r\n        if(field === \"name\") {\r\n            setName(e.target.value);\r\n        }\r\n        else if( field === \"description\"){\r\n            setDescription(e.target.value);\r\n        }\r\n        else if( field === \"link\"){\r\n            setLink(e.target.value)\r\n        }\r\n        else if( field === \"alt\") { \r\n            setAlt(e.target.value)\r\n        }\r\n    }\r\n\r\n    return (\r\n        <Container maxW=\"xl\" mt=\"4\">\r\n              <Alert status=\"error\" mb={2} hidden={!error}>\r\n                    <AlertIcon />\r\n                    {msg}\r\n              </Alert>\r\n            <form>\r\n                <Stack spacing={4}>\r\n                 <Box display=\"flex\"  alignItems=\"center\"  justifyContent=\"flex-end\" width=\"100%\">\r\n                    <Button type='submit' size=\"sm\" colorScheme=\"teal\" onClick={(e)=>handleClick(e)} disabled={error}>Create Collection</Button>\r\n                </Box>\r\n                <FormControl>\r\n                    <FormLabel>Collection Id</FormLabel>\r\n                    <Input type=\"text\" value={id}  placeholder='Collection Id' disabled/>\r\n                </FormControl>\r\n                <FormControl isRequired>\r\n                    <FormLabel>Collection Name</FormLabel>\r\n                    <Input type=\"text\" onChange={(e)=>handleChange(e,\"name\")} value={name} placeholder='Enter Collection Name' required/>\r\n                </FormControl>\r\n                <FormControl isRequired>\r\n                    <FormLabel>Collection Description</FormLabel>\r\n                    <Textarea onChange={(e)=>handleChange(e,\"description\")} defaultValue={description} id='collection_description'  placeholder='Enter Description' isRequired/>\r\n                </FormControl>\r\n                <FormControl>\r\n                    <FormLabel>Add Images</FormLabel>\r\n                    <Input type='url' onChange={(e)=>handleChange(e,\"link\")} placeholder=\"Image Link\" value={link}/>\r\n                    <Input  mt={2} type='name' onChange={(e)=>handleChange(e,\"alt\")}  placeholder=\"Alternate Text\" value={alt}/>\r\n                    <Button mt={2} d= 'block' verticalAlign\t='right' onClick={addImage} colorScheme=\"teal\" variant=\"outline\">Add Image</Button>\r\n                    <div className='image_preview' mb=\"4\">\r\n                   { \r\n                       images.map((item)=>{\r\n                           return(\r\n                           <div className='list_item' key={item.id} >\r\n                               <Button backgroundColor=\"red.400\" size=\"xs\" position=\"absolute\" left=\"90\" top=\"0\" onClick={(e)=>removeImage(e, item.id)}>x</Button>\r\n                               <Image boxSize=\"100px\" objectFit=\"cover\" src={item.link} key={item.id} fallbackSrc=\"https://via.placeholder.com/150\" />\r\n                           </div>)\r\n                        } )\r\n                   }\r\n                   </div>\r\n                </FormControl>\r\n                </Stack>\r\n            </form>\r\n          \r\n        </Container >\r\n    )\r\n}\r\n\r\nexport default CreateCollection\r\n","import './App.css';\r\nimport {ChakraProvider} from '@chakra-ui/react'\r\nimport Home from './Home';\r\nimport {\r\n  BrowserRouter as Router,\r\n  Switch,\r\n  Route,\r\n  Link\r\n} from \"react-router-dom\";\r\nimport { Box } from \"@chakra-ui/react\"\r\nimport { List, ListItem } from \"@chakra-ui/react\"\r\nimport CreateCollection from './components/CreateCollection';\r\nimport EditCollection from './components/EditCollection';\r\nfunction App() {\r\n\r\n\r\n  return (\r\n    <ChakraProvider>\r\n      <Router>\r\n      <div className=\"App\">\r\n\r\n            {/* Navigation Bar*/}\r\n            <Box bg='blue.500'>\r\n                <List display=\"flex\" p=\"4\">\r\n                    <ListItem color=\"white\" ml=\"3\">\r\n                        <Link to='/'>Home</Link>\r\n                        </ListItem>  \r\n                    <ListItem color=\"white\" ml=\"3\">\r\n                        <Link to='/create_new'>Create</Link>\r\n                    </ListItem>\r\n                </List>\r\n            </Box>\r\n\r\n            {/* Home to render collection*/}\r\n            <Switch>\r\n                <Route exact path = '/create_new'>\r\n                  <CreateCollection/>\r\n                </Route>\r\n                <Route exact path = '/' >\r\n                   <Home/>\r\n                </Route>\r\n                <Route exact path = '/edit/:id'>\r\n                  <EditCollection/>\r\n                </Route>\r\n            </Switch>\r\n          \r\n\r\n      </div>\r\n      </Router>\r\n    </ChakraProvider>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import { actionTypes } from \"../constants/action-type\"\r\n\r\nconst intialState = {\r\n    collections : [\r\n        {id : 'acd1', name:\"Animal Collection\", description : \"Farhan's Snaps\", images : [{id:'121',link:'https://i.picsum.photos/id/367/200/200.jpg?hmac=6NmiWxiENMBIeAXEfu9fN20uigiBudgYzqHfz-eXZYk',alt:'PicSum'}]},\r\n        {id : 'bcd1', name:\"Anime Collection\", description : \"Tokyo Ghoul\", images : [{id:'123',link:'https://picsum.photos/200/300?grayscale',alt:'PicSum'}]},\r\n        {id : 'def1', name:\"Country Collection\", description : \"Country Side Collections\", images : [{id:'100',link:'https://picsum.photos/200/300/?blur=2',alt:'PicSum'}]},\r\n        {id : 'ghi1', name:\"Dog Collection\", description : \"All breeds of dogs\", images : [{id:'99',link:'https://picsum.photos/id/237/200/300',alt:'PicSum'}]}\r\n    ]\r\n}\r\n\r\nexport const collectionReducer = (state = intialState, {type, payload}) =>{\r\n    switch(type){\r\n\r\n        case actionTypes.CREATE_COLLECTION :\r\n            return { ...state,collections:[...state.collections, payload]};\r\n\r\n        case actionTypes.UPDATE_COLLECTION :\r\n            let item = state.collections.findIndex(collection => collection.id === payload.id)\r\n            let updatedState = state.collections.splice(item,1,payload);\r\n            return {...state, updatedState};  \r\n            \r\n        case actionTypes.DELETE_COLLECTION :\r\n            let updateCollection = state.collections.filter(collection => collection.id !== payload)\r\n            return {...state, collections : updateCollection};\r\n\r\n        default :\r\n            return state;\r\n\r\n    }\r\n}","import {combineReducers} from 'redux'\r\n\r\n\r\nimport { collectionReducer } from './collectionReducer'\r\n\r\n\r\nexport const rootReducer = combineReducers({\r\n        collections : collectionReducer\r\n})","import {createStore} from 'redux'\r\nimport {rootReducer} from './reducers/rootReducer'\r\n\r\nconst store = createStore(rootReducer, { }, window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__() )\r\n\r\nexport default store ;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport { Provider } from 'react-redux';\nimport store from './redux/store';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n        <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}